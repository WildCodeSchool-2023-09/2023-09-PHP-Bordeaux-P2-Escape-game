{% extends 'layout.html.twig' %}

{% block title %}Scene{% endblock %}

{% block stylesheet %}
	<link rel="stylesheet" href="/assets/css/scene.css">
{% endblock %}

{% block content %}
<div class="container">
		<div class="ImgD">	
            <div class="Image">
                    <img usemap="#{{plan['name']}}" src="{{plan['image']}}" alt="{{plan['alt']}}" id="sceneImage">

                    <map name={{plan['name']}}>

                    {% if (plan)%}
                        <area shape="circle" coords="31,199,20" alt={{plan['alt']}} href={{plan['linkRetour']}} {# id="pastille" #}/>
                    {% endif %}
                    </map>
            </div>
            
                <div class="Dialogues">
                    {# <div id="typedtext"> #}
                        {{ plan['dialogues'] ?? 'Dialogue par d√©faut ou message d\'erreur si n√©cessaire' }}
                </div>
        </div>
            <div class="tools">
                <div class="pseudo">
                    {{ user.pseudo }}
                </div>

                <div id="timer">
                    <p id="timerp">{{ session.startTime }}</p>
                </div>

                <div class="inventory">
                </div>

                <div class="indice">
                <img href="#" src="/assets/images/ampoule_bw.png" alt="ampoule en noir et blanc" onmouseover="this.src='/assets/images/ampoule_color.png'" onmouseout="this.src='/assets/images/ampoule_bw.png'" onclick=togglePopup()> 
                <span class="text-bubble">Indice</span>

    </div>
                {% block javascript %}
                <script> 
                    function togglePopup() {
                    let popup = document.querySelector("#popup");
                    popup.classList.toggle("open");
                    }
                </script>
                {% endblock %}
            </div> 
        
        </div>
            
            
            <div id="popup">
                <div class="popup-content">
                    <h2>INDICE üí°</h2>
                    <p>{{ plan['hint'] ?? 'Indice par d√©faut ou message d\'erreur si n√©cessaire' }}</p>
                    <a href="javascript:void(0)" onclick=togglePopup() class="popup-exit">‚ùå</a>
                </div>
            </div>

                {% if (scene['scene1']['plan1']['hint']) %}
					<p{{scene['hint']}} id="indice" /p>
					{% endif %}
				{% if (scene['linkedPlans']['plan2']['hint']) %}
					<p{{ scene['hint']}} id="indice"/p>
				{% endif %}
				{% if (scene['linkedPlans']['plan3']['hint']) %}
					<p{{ scene['hint']}} id="indice"/p>
				{% endif %}
				{% if (scene['linkedPlans']['plan4']['hint']) %}
                    <p{{ scene['plan4']['hint']}} id="indice"/p>
				{% endif %}
</div>
{% endblock %}

{# {% block javascript %}
    <script>
            // Animation en JS pour que les dialogues s'√©crivent comme uen "machine √† √©crire" : le code simule la frappe du texte lettre par lettre.
    // √† voir si on utilise plut√¥t la librairie Sheperdjs pour faire cette animation
   
        // on initialise les diff√©rentes variables pour suivre la frappe progressive du texte :
    var iIndex = 0; 
    var iTextPos = 0;
    var aText = [
                    href="{{ scene.plan1.dialogues }}"
                ]; 
    var iArrLength = aText[0].length; 
    var iScrollAt = 20;
    var iRow = 0; 
    var sContents = ""; 
    var iSpeed = 50;
   
    // La fonction typewriter() est responsable de faire d√©filer et afficher le texte sur la page. 
    
    function typewriter() 
    {
            sContents = ' ';
            iRow = Math.max(0, iIndex - iScrollAt);
            var destination = document.getElementById("typedtext");
            
            while (iRow < iIndex) 
            {
                sContents += aText[iRow++] + '<br />';
            }
            destination.innerHTML = sContents + aText[iIndex].substring(0, iTextPos) + "_";
            if (iTextPos++ == iArrLength) 
            {
                iTextPos = 0;
                iIndex++;
                if (iIndex != aText.length) 
                {
                    iArrLength = aText[iIndex].length;
                    setTimeout(typewriter, 500);
                }
            } else {
                setTimeout(typewriter, iSpeed);
            }
        }
                        
    typewriter();
                    
    </script> 
   <script type="text/javascript" src="/assets/js/dialogs.js">
{% endblock %} #}
