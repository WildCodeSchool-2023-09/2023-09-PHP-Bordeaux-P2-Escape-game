{% extends 'layout.html.twig' %}

{% block title %}Scene
{% endblock %}

{% block stylesheet %}
	<link rel="stylesheet" href="/assets/css/scene.css">
{% endblock %}

{% block content %}

<div class="layout">
	<div class="ImgDialogues">
		<div class="ImageLightOff">

			<img usemap="#{{scene['name']}}" src="{{scene['image']}}" alt="{{scene['alt']}}" id="sceneImage">

			<map name={{scene['name']}}>

				{% if (scene['linkedPlans']['plan1']) %}
					<area shape="circle" coords={{scene['linkedPlans']['plan1']['coords']}} alt={{scene['linkedPlans']['plan1']['alt']}} href={{scene['linkedPlans']['plan1']['href']}} id="pastille"/>
				{% endif %}
				{% if (scene['linkedPlans']['plan2']) %}
					<area shape="circle" coords={{scene['linkedPlans']['plan2']['coords']}} alt={{scene['linkedPlans']['plan2']['alt']}} href={{scene['linkedPlans']['plan2']['href']}} id="pastille"/>
				{% endif %}
				{% if (scene['linkedPlans']['plan3']) %}
					<area shape="circle" coords={{scene['linkedPlans']['plan3']['coords']}} alt={{scene['linkedPlans']['plan3']['alt']}} href={{scene['linkedPlans']['plan3']['href']}} id="pastille"/>
				{% endif %}
				{% if (scene['linkedPlans']['plan4']) %}
					<area shape="circle" coords={{scene['linkedPlans']['plan4']['coords']}} alt={{scene['linkedPlans']['plan4']['alt']}} href={{scene['linkedPlans']['plan4']['href']}} id="pastille"/>
				{% endif %}
				{% if (linkedScene) %}
					<area shape="circle" coords="379,190,20" alt={{linkedScene['alt']}} href={{linkedScene['href']}} id="pastille"/>
				{% endif %}

				{# {% if (plan)%}
				                <area shape="circle" 
				                coords= "31,199,20"
				                alt= {{scene['alt']}} 
				                href={{scene['href']}} 
				                id="pastille"/>
				            {% endif %} #}
			</map>

		</div>

		<div class="Dialogues">
			<div id="typedtext">
				{{ scene['dialogues'] ?? 'Dialogue par défaut ou message d\'erreur si nécessaire' }}
            </div>
        </div>
<div>
    <a href="/scene">Retour à la scène précédente</a>
</div>

        <div class="tools">
            <div class="pseudo">
                JojoPok
                <!-- fonction qui récupère le pseudo du joueur lorsque celui-ci est connecté à sa session-->
            </div>

            <div class="timer">
                60:00
                <!-- fonction timer -->
            </div>

            <div class="inventory">
            </div>

           <div class="indice">
                <img src="/assets/images/ampoule_bw.png" alt="ampoule en noir et blanc" onmouseover="this.src='/assets/images/ampoule_color.png'" onmouseout="this.src='/assets/images/ampoule_bw.png'"/>    
            </div>
        </div>
    </div>

{% endblock %}

{# {% block javascript %}
    <script>
            // Animation en JS pour que les dialogues s'écrivent comme uen "machine à écrire" : le code simule la frappe du texte lettre par lettre.
    // à voir si on utilise plutôt la librairie Sheperdjs pour faire cette animation
   
        // on initialise les différentes variables pour suivre la frappe progressive du texte :
    var iIndex = 0; 
    var iTextPos = 0;
    var aText = [
                    href="{{ scene.plan1.dialogues }}"
                ]; 
    var iArrLength = aText[0].length; 
    var iScrollAt = 20;
    var iRow = 0; 
    var sContents = ""; 
    var iSpeed = 50;
   
    // La fonction typewriter() est responsable de faire défiler et afficher le texte sur la page. 
    
    function typewriter() 
    {
            sContents = ' ';
            iRow = Math.max(0, iIndex - iScrollAt);
            var destination = document.getElementById("typedtext");
            
            while (iRow < iIndex) 
            {
                sContents += aText[iRow++] + '<br />';
            }
            destination.innerHTML = sContents + aText[iIndex].substring(0, iTextPos) + "_";
            if (iTextPos++ == iArrLength) 
            {
                iTextPos = 0;
                iIndex++;
                if (iIndex != aText.length) 
                {
                    iArrLength = aText[iIndex].length;
                    setTimeout(typewriter, 500);
                }
            } else {
                setTimeout(typewriter, iSpeed);
            }
        }

    typewriter();

    </script> 
   <script type="text/javascript" src="/assets/js/dialogs.js">
{% endblock %} #}
